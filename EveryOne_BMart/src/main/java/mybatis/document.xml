<?xml version="1.0" encoding="UTF-8"?>
   <!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="document.Document">
	<select id="getAllDocument" resultType="document.model.DocumentBean">
		select * from document
	    <where>
	    	writer=#{id}
		    <!-- dcategory에 대한 조건 추가 -->
		    <if test="whatColumn != null and whatColumn != ''">
		        and dcategory = #{whatColumn} 
		    </if>
		    
		    <!-- dnum 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
		    <if test="inputDnum != null and inputDnum != ''">
		        and dnum LIKE #{inputDnum} 
		    </if>
		
		    <!-- title 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
		    <if test="inputTitle != null and inputTitle != ''">
		        and title LIKE #{inputTitle} 
		    </if>
		
		    <!-- writeday 조건: 날짜 범위로 필터링 -->
		    <if test="inputDay1 != null and inputDay1 != ''">
			    <![CDATA[
			    AND TO_CHAR(writeday, 'YYYY-MM-DD') >= #{inputDay1}
			    ]]>
		    </if>
		    <if test="inputDay2 != null and inputDay2 != ''">
			    <![CDATA[
			    AND TO_CHAR(writeday, 'YYYY-MM-DD') <= #{inputDay2}
			    ]]>
		    </if>
	    </where>
		order by writeday desc
	</select>
	
	<select id="getTotalCount" resultType="int">
   		select count(*) from document where 1=1 and writer=#{id}
	    <!-- dcategory에 대한 조건 추가 -->
	    <if test="whatColumn != null and whatColumn != ''">
	        AND dcategory = #{whatColumn}
	    </if>
	    
	    <!-- dnum 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
	    <if test="inputDnum != null and inputDnum != ''">
	        AND dnum LIKE #{inputDnum}
	    </if>
	 
	    <!-- title 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
	    <if test="inputTitle != null and inputTitle != ''">
	        AND title LIKE #{inputTitle}
	    </if>
	
		<!-- writeday 조건: 날짜 범위로 필터링 -->
		<if test="inputDay1 != null and inputDay1 != ''">
			<![CDATA[
			    AND TO_CHAR(writeday, 'YYYY-MM-DD') >= #{inputDay1}
			]]>
		</if>
		<if test="inputDay2 != null and inputDay2 != ''">
		    <![CDATA[
			    AND TO_CHAR(writeday, 'YYYY-MM-DD') <= #{inputDay2}
		    ]]>
		</if>
	</select>
	
	<select id="getWaitDocument" resultType="int">
		select count(*) from document 
		where dstatus = 0 and request = 1 and writer=#{id}
	</select>
	
	<select id="getTempDocument" resultType="int">
		select count(*) from document
		where request = 0 and dstatus = 0 and writer=#{id}
	</select>
	
	<select id="getReturnDocument" resultType="int">
		select count(*) from document
		where dstatus = -1 and writer=#{id}
	</select>
	
	<select id="getApproveDocument" resultType="int">
		select count(*) from document
		where dstatus = 1 and writer=#{id}
	</select>
	
	<select id="getDocumentByDnum" resultType="document.model.DocumentBean">
		select * from document
		where dnum=#{dnum}
	</select>
	
	<select id="getAllWaitDocument" resultType="document.model.DocumentBean">
		select * from (select * from document where request=1 and dstatus=0 and writer=#{id})
		<if test="whatColumn == 'all'">
			where dcategory like #{keyword} or dnum like #{keyword} or title like #{keyword} 
		</if>
		<if test="whatColumn == 'dcategory'">
			where dcategory like #{keyword} 
		</if>
		<if test="whatColumn == 'dnum'">
			where dnum like #{keyword} 
		</if>
		<if test="whatColumn == 'title'">
			where title like #{keyword} 
		</if>
		order by writeday desc 
	</select>
	
	<select id="getWaitCount" resultType="int">
		select count(*) from (select * from document where request=1 and dstatus=0 and writer=#{id})
		<if test="whatColumn == 'all'">
			where dcategory like #{keyword} or dnum like #{keyword} or title like #{keyword} 
		</if>
		<if test="whatColumn == 'dcategory'">
			where dcategory like #{keyword} 
		</if>
		<if test="whatColumn == 'dnum'">
			where dnum like #{keyword} 
		</if>
		<if test="whatColumn == 'title'">
			where title like #{keyword} 
		</if>
 	</select>
	
	<select id="getAllTempDocument" resultType="document.model.DocumentBean">
		select * from (select * from document where request=0 and writer=#{id})
		<if test="whatColumn == 'all'">
			where dcategory like #{keyword} or dnum like #{keyword} or title like #{keyword} 
		</if>
		<if test="whatColumn == 'dcategory'">
			where dcategory like #{keyword} 
		</if>
		<if test="whatColumn == 'dnum'">
			where dnum like #{keyword} 
		</if>
		<if test="whatColumn == 'title'">
			where title like #{keyword} 
		</if>
		order by writeday desc
	</select>
	
	<select id="getTempCount" resultType="int">
		select count(*) from (select * from document where request=0 and writer=#{id})
		<if test="whatColumn == 'all'">
			where dcategory like #{keyword} or dnum like #{keyword} or title like #{keyword} 
		</if>
		<if test="whatColumn == 'dcategory'">
			where dcategory like #{keyword} 
		</if>
		<if test="whatColumn == 'dnum'">
			where dnum like #{keyword} 
		</if>
		<if test="whatColumn == 'title'">
			where title like #{keyword} 
		</if>
 	</select>
	
	<select id="getAllReturnDocument" resultType="document.model.DocumentBean">
		select * from (select * from document where dstatus=-1 and writer=#{id})
		<if test="whatColumn == 'all'">
			where dnum like #{keyword} or title like #{keyword} 
		</if>
		<if test="whatColumn == 'dnum'">
			where dnum like #{keyword} 
		</if>
		<if test="whatColumn == 'title'">
			where title like #{keyword} 
		</if>
		order by writeday desc
	</select>
	
	<select id="getReturnCount" resultType="int">
		select count(*) from (select * from document where dstatus=-1 and writer=#{id}) 
		<if test="whatColumn == 'all'">
			where dnum like #{keyword} or title like #{keyword} 
		</if>
		<if test="whatColumn == 'dnum'">
			where dnum like #{keyword} 
		</if>
		<if test="whatColumn == 'title'">
			where title like #{keyword} 
		</if>
 	</select>
	
	<select id="getAllApproveDocument" resultType="document.model.DocumentBean">
		select * from (select * from document where request=1 and dstatus=1 and writer=#{id}) 
		<if test="whatColumn == 'all'">
			where dcategory like #{keyword} or dnum like #{keyword} or title like #{keyword} 
		</if>
		<if test="whatColumn == 'dcategory'">
			where dcategory like #{keyword} 
		</if>
		<if test="whatColumn == 'dnum'">
			where dnum like #{keyword} 
		</if>
		<if test="whatColumn == 'title'">
			where title like #{keyword}
		</if>
		order by writeday desc
	</select>
	
	<select id="getApproveCount" resultType="int">
		select count(*) from (select * from document where request=1 and dstatus=1 and writer=#{id})  
		<if test="whatColumn == 'all'">
			where dcategory like #{keyword} or dnum like #{keyword} or title like #{keyword} 
		</if>
		<if test="whatColumn == 'dcategory'">
			where dcategory like #{keyword} 
		</if>
		<if test="whatColumn == 'dnum'">
			where dnum like #{keyword}
		</if>
		<if test="whatColumn == 'title'">
			where title like #{keyword} 
		</if>
 	</select>
 	
 	<select id="getWaitDocumentList" resultType="document.model.DocumentBean">
 		<![CDATA[
		    select *  from (select * from document where request=1 and dstatus=0 and writer=#{id} order by writeday desc)
		    where rownum <= 5
	    ]]>
 	</select>
 	
 	<select id="getApproveDocumentList" resultType="document.model.DocumentBean">
 		<![CDATA[
		    select *  from (select * from document where request=1 and dstatus=1 and writer=#{id} order by writeday desc)
		    where rownum <= 5
	    ]]>
 	</select>
 	
 	<select id="getTempDocumentList" resultType="document.model.DocumentBean">
 		<![CDATA[
		    select *  from (select * from document where request=0 and writer=#{id} order by writeday desc)
		    where rownum <= 5
	    ]]>
 	</select>
 	
 	<select id="getReturnDocumentList" resultType="document.model.DocumentBean">
 		<![CDATA[
		    select *  from (select * from document where dstatus=-1 and writer=#{id} order by writeday desc)
		    where rownum <= 5
	    ]]>
 	</select>
 	
	<select id="whatNumber" resultType="int">
		select max(rownum) from 
		(select * from document where dcategory=#{category})
	</select> 	
	
 	<insert id="insertDocument">
 		insert into document(dnum, dcategory, writer, writeday, title, dcontent, prdname, prdcategory, request, approval, dstatus) 
 		values(#{dnum}, #{dcategory}, #{writer}, sysdate, #{title, jdbcType=VARCHAR}, #{dcontent, jdbcType=VARCHAR}, #{prdname}, #{prdcategory}, 1, 0, 0)
 	</insert>
 	
 	<insert id="tempSaveDocument">
 		insert into document(dnum, dcategory, writer, writeday, title, dcontent, prdname, prdcategory, request, approval, dstatus) 
 		values(#{dnum}, #{dcategory}, #{writer}, sysdate, #{title, jdbcType=VARCHAR}, #{dcontent, jdbcType=VARCHAR}, #{prdname}, #{prdcategory}, 0,  0, 0)
 	</insert>
 	
 	<update id="updateDocument">
 		update document set dcategory=#{dcategory}, writeday=sysdate, title=#{title, jdbcType=VARCHAR}, dcontent=#{dcontent}, prdcategory=#{prdcategory}, prdname=#{prdname}
 		where dnum=#{dnum}
 	</update>
 	
 	<delete id="deleteDocument">
 		delete from document where dnum=#{dnum}
 	</delete>
 	
	<select id="getAllDocumentForAdmin" resultType="document.model.DocumentBean">
		select * from document
	    <where>
	    	1=1 and request=1
		    <!-- dcategory에 대한 조건 추가 -->
		    <if test="whatColumn != null and whatColumn != ''">
		        and dcategory = #{whatColumn} 
		    </if>
		    
		    <!-- dnum 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
		    <if test="inputDnum != null and inputDnum != ''">
		        and dnum LIKE #{inputDnum} 
		    </if>
		
		    <!-- title 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
		    <if test="inputTitle != null and inputTitle != ''">
		        and title LIKE #{inputTitle} 
		    </if>
		
		    <!-- writeday 조건: 날짜 범위로 필터링 -->
		    <if test="inputDay1 != null and inputDay1 != ''">
			    <![CDATA[
			    AND TO_CHAR(writeday, 'YYYY-MM-DD') >= #{inputDay1}
			    ]]>
		    </if>
		    <if test="inputDay2 != null and inputDay2 != ''">
			    <![CDATA[
			    AND TO_CHAR(writeday, 'YYYY-MM-DD') <= #{inputDay2}
			    ]]>
		    </if>
	    </where>
		order by writeday desc
	</select>
	
	<select id="getTotalCountForAdmin" resultType="int">
   		select count(*) from document where 1=1 and request=1
	    <!-- dcategory에 대한 조건 추가 -->
	    <if test="whatColumn != null and whatColumn != ''">
	        AND dcategory = #{whatColumn}
	    </if>
	    
	    <!-- dnum 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
	    <if test="inputDnum != null and inputDnum != ''">
	        AND dnum LIKE #{inputDnum}
	    </if>
	
	    <!-- title 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
	    <if test="inputTitle != null and inputTitle != ''">
	        AND title LIKE #{inputTitle}
	    </if>
	
		<!-- writeday 조건: 날짜 범위로 필터링 -->
		<if test="inputDay1 != null and inputDay1 != ''">
		    <![CDATA[
			    AND TO_CHAR(writeday, 'YYYY-MM-DD') >= #{inputDay1}
			]]>
		</if>
		<if test="inputDay2 != null and inputDay2 != ''">
		    <![CDATA[
			    AND TO_CHAR(writeday, 'YYYY-MM-DD') <= #{inputDay2}
		    ]]>
		</if>
	</select>
	
	<update id="updateApproval">
		update document set approval=1, dstatus=1, approveday=sysdate where dnum=#{dnum}
	</update>
	
	<update id="updateReason">
		update document set approval=1, dstatus=-1, reason=#{reason}, approveday=sysdate where dnum=#{dnum}
	</update>
	
	<select id="getAllWaitDocumentForAdmin" resultType="document.model.DocumentBean">
		select * from document 
		<where>
	    	request=1 and dstatus=0
		    <!-- dcategory에 대한 조건 추가 -->
		    <if test="whatColumn != null and whatColumn != ''">
		        and dcategory = #{whatColumn} 
		    </if>
		    
		    <!-- dnum 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
		    <if test="inputDnum != null and inputDnum != ''">
		        and dnum LIKE #{inputDnum} 
		    </if>
		
		    <!-- title 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
		    <if test="inputTitle != null and inputTitle != ''">
		        and title LIKE #{inputTitle} 
		    </if>
		
			<!-- writeday 조건: 날짜 범위로 필터링 -->
			<if test="inputDay1 != null and inputDay1 != ''">
			    <![CDATA[
				    AND TO_CHAR(writeday, 'YYYY-MM-DD') >= #{inputDay1}
				]]>
			</if>
			<if test="inputDay2 != null and inputDay2 != ''">
			    <![CDATA[
				    AND TO_CHAR(writeday, 'YYYY-MM-DD') <= #{inputDay2}
			    ]]>
			</if>
	    </where>
		order by writeday desc
	</select>
	
	<select id="getWaitTotalCountForAdmin" resultType="int">
   		select count(*) from document 
   		<where>
	    	request=1 and dstatus=0
		    <!-- dcategory에 대한 조건 추가 -->
		    <if test="whatColumn != null and whatColumn != ''">
		        and dcategory = #{whatColumn} 
		    </if>
		    
		    <!-- dnum 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
		    <if test="inputDnum != null and inputDnum != ''">
		        and dnum LIKE #{inputDnum} 
		    </if>
		
		    <!-- title 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
		    <if test="inputTitle != null and inputTitle != ''">
		        and title LIKE #{inputTitle} 
		    </if>
		
		<!-- writeday 조건: 날짜 범위로 필터링 -->
		<if test="inputDay1 != null and inputDay1 != ''">
		    <![CDATA[
			    AND TO_CHAR(writeday, 'YYYY-MM-DD') >= #{inputDay1}
			]]>
		</if>
		<if test="inputDay2 != null and inputDay2 != ''">
		    <![CDATA[
			    AND TO_CHAR(writeday, 'YYYY-MM-DD') <= #{inputDay2}
		    ]]>
		</if>
	    </where>
	</select>
	
	<select id="getAllCompleteDocumentForAdmin" resultType="document.model.DocumentBean">
		select * from document 
		<where>
	    	approval=1
		    <!-- dcategory에 대한 조건 추가 -->
		    <if test="whatColumn != null and whatColumn != ''">
		        and dcategory = #{whatColumn} 
		    </if>
		    
		    <!-- dnum 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
		    <if test="inputDnum != null and inputDnum != ''">
		        and dnum LIKE #{inputDnum} 
		    </if>
		
		    <!-- title 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
		    <if test="inputTitle != null and inputTitle != ''">
		        and title LIKE #{inputTitle} 
		    </if>
		
			<!-- writeday 조건: 날짜 범위로 필터링 -->
			<if test="inputDay1 != null and inputDay1 != ''">
			    <![CDATA[
				    AND TO_CHAR(writeday, 'YYYY-MM-DD') >= #{inputDay1}
				]]>
			</if>
			<if test="inputDay2 != null and inputDay2 != ''">
			    <![CDATA[
				    AND TO_CHAR(writeday, 'YYYY-MM-DD') <= #{inputDay2}
			    ]]>
			</if>
	    </where>
		order by writeday desc
	</select>
	
	<select id="getCompleteTotalCountForAdmin" resultType="int">
   		select count(*) from document 
   		<where>
	    	approval=1
		    <!-- dcategory에 대한 조건 추가 -->
		    <if test="whatColumn != null and whatColumn != ''">
		        and dcategory = #{whatColumn} 
		    </if>
		    
		    <!-- dnum 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
		    <if test="inputDnum != null and inputDnum != ''">
		        and dnum LIKE #{inputDnum} 
		    </if>
		
		    <!-- title 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
		    <if test="inputTitle != null and inputTitle != ''">
		        and title LIKE #{inputTitle} 
		    </if>
		
		<!-- writeday 조건: 날짜 범위로 필터링 -->
		<if test="inputDay1 != null and inputDay1 != ''">
		    <![CDATA[
			    AND TO_CHAR(writeday, 'YYYY-MM-DD') >= #{inputDay1}
			]]>
		</if>
		<if test="inputDay2 != null and inputDay2 != ''">
		    <![CDATA[
			    AND TO_CHAR(writeday, 'YYYY-MM-DD') <= #{inputDay2}
		    ]]>
		</if>
	    </where>
	    order by writeday desc
	</select>
	
	<select id="getWaitDocumentForAdmin" resultType="int">
		select count(*) from document where request=1 and approval=0 and dstatus=0
	</select>
	
	<update id="requestDocument">
		update document set request=1, writeday=sysdate, title=#{title}, dcontent=#{dcontent}, prdcategory=#{prdcategory}, prdname=#{prdname}
		where dnum=#{dnum}
	</update>
	
	<update id="requestDocumentByDnum">
		update document set request=1, approval=0, dstatus=0 where dnum=#{dnum}
	</update>
	
	<select id="getWaitCountForAdmin" resultType="int">
		select count(*) from document where request=1 and dstatus=0
	</select>
	
	<select id="getPrdname" resultType="String">
		select prdname from document where dnum=#{dnum}
	</select>
	
	<update id="updateProductAd">
		update product set ad=1 where pname=#{pname}
	</update>
	
	<select id="getWriter" resultType="String">
		select writer from document where dnum=#{dnum}
	</select>
	
	<delete id="deleteBusinessId">
		delete from business where id=#{writer}
	</delete>
	
	<select id="getPrdcategory" resultType="String">
		select prdcategory from document where dnum=#{dnum}
	</select>
	
	<select id="checkPrdcategory" resultType="int">
		select count(*) from category where name=#{prdcategory}
	</select>
	
	<insert id="insertCategory">
		insert into category values(cate_seq.nextval, #{prdcategory})
	</insert>
	
	<select id="getPrdcategoryById" resultType="int">
		select count(*) from document where writer=#{id} and prdcategory=#{prdcategory}
	</select>
	
	<delete id="deleteProductById">
		delete from product where id=#{id}
	</delete>
</mapper>