<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="product">
	<select id="getTotalCount" resultType="int"
		parameterType="hashmap">
		select count(*) from product

		<if test="whatColumn == 'all'">
			where all like #{keyword}
		</if>
		<if test="whatColumn == 'pname'">
			where pname like #{keyword}
		</if>

		<if test="whatColumn == 'price'">
			where price like #{keyword}
		</if>
		<if test="whatColumn == 'stock'">
			where stock like #{keyword}
		</if>
		<if test="whatColumn == 'pcategory'">
			where pcategory like #{keyword}
		</if>
	</select>

	<select id="getProductList" resultType="mall.model.ProductBean">
		select * from product
		<where>
			<if test="whatColumn == 'all'">
				(
				pname like #{keyword} or

				price like #{keyword} or
				stock
				like #{keyword} or
				pcategory like #{keyword}
				)
			</if>
			<if test="whatColumn == 'pname'">
				pname like #{keyword}
			</if>

			<if test="whatColumn == 'price'">
				price like #{keyword}
			</if>
			<if test="whatColumn == 'stock'">
				stock like #{keyword}
			</if>
			<if test="whatColumn == 'pcategory'">
				pcategory like #{keyword}
			</if>
		</where>
		order by pnum desc
	</select>

	<insert id="insertProduct">
		insert into product(pnum,pcategory, id, pname,
		pimage, price, capacity, pcontent, expritydate, origin, stock,
		inputdate, ordercount, mall)
		values(seqprod.nextval,#{pcategory},#{id}
		,#{pname}, #{pimage,jdbcType=VARCHAR}, #{price}, #{capacity},
		#{pcontent}, #{expritydate}, #{origin},#{stock},sysdate,0,#{mall})

	</insert>

	<delete id="deleteProduct">
		delete from product where pnum=#{pnum}

	</delete>


	<!-- 상품 상세보기,상품 수정하기, 장바구니 목록의 상품 -->
	<select id="detailViewByNum" resultType="mall.model.ProductBean">
		select * from product
		where pnum = #{pnum}
	</select>



	<update id="updateProduct">
		update product set pname = #{pname},price = #{price},
		stock=#{stock},pimage
		= #{pimage},
		pcontent = #{pcontent} where pnum =
		#{pnum}
	</update>
	<!-- <update id="updateStock"> update products set stock = stock-#{stock} 
		where num = #{num} </update> -->

	<select id="getRangeTest" resultType="mall.model.ProductBean">
		select rownum, pname,
		ordercount
		from (select rownum, pname, ordercount from product order by
		ordercount
		desc)
		where rownum between 1 and 5
	</select>

	<select id="getCateChart" resultType="mall.model.ProductBean">

		select
		pcategory,sum(ordercount) as ordercount
		from product
		group by pcategory

	</select>

	<select id="getPnumSale" resultType="mall.model.ProductBean">



		SELECT *
		FROM (
		SELECT
		p.pnum,
		p.price,
		p.ordercount,
		TO_CHAR(o.orderdate, 'FMMM') || '월' AS hire_month
		FROM
		product p
		INNER JOIN
		orderInfo o
		ON
		p.pnum = o.pnum
		)
		PIVOT (
		SUM(ordercount) AS 판매량,
		SUM(ordercount * price) AS 총수입
		FOR hire_month IN
		('1월' AS "1월", '2월' AS "2월", '3월' AS "3월", '4월' AS "4월", '5월' AS "5월", '6월'
		AS "6월", '7월' AS "7월", '8월' AS "8월", '9월' AS "9월", '10월' AS "10월",
		'11월' AS "11월", '12월' AS "12월")
		)

	</select>


</mapper>

<!-- product.xml -->