<?xml version="1.0" encoding="UTF-8"?>

<!-- product.xml -->
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="product">
	<select id="getBestProduct" resultType="product">
		select * from (select * from product order by ordercount desc) where rownum between 1 and 10
	</select>
	
	<select id="getProductInfo" resultType="product">
		select * from product where pnum=#{pnum}
	</select>
	
	<select id="getWatchLists" resultType="product">
		select * from watch w join product p on w.pnum = p.pnum and w.id=#{id} order by wnum desc
	</select>
	
	<select id="getWatch" resultType="product">
		select * from watch w join product p on w.pnum = p.pnum and w.id=#{id} 
		<if test="range == 'recently'">
			order by wnum desc
		</if>
		<if test="range == 'highPrice'">
			order by price desc
		</if>
		<if test="range == 'rowPrice'">
			order by price
		</if>
	</select>
	
	<select id="getInterestLists" resultType="product">
		select * from interest i join product p on i.pnum = p.pnum and i.id=#{id} order by inum desc
	</select>
	
	<select id="getInterest" resultType="product">
		select * from interest i join product p on i.pnum = p.pnum and i.id=#{id} 
		<if test="range == 'recently'">
			order by inum desc
		</if>
		<if test="range == 'highPrice'">
			order by price desc
		</if>
		<if test="range == 'rowPrice'">
			order by price
		</if>
	</select>
	
	<select id="getTotalCount" resultType="int">
		select count(*) from product where pcategory=#{category}
	</select>
	
 	<select id="getProductRange" resultType="product">
		select * from product where pcategory=#{category}
		<if test="range == 'recently'">
			order by pnum desc
		</if>
		<if test="range == 'highPrice'">
			order by price desc
		</if>
		<if test="range == 'rowPrice'">
			order by price
		</if>
		<if test="range == 'best'">
			order by ordercount desc
		</if>
	</select>
	
	<select id="getNewProductCount" resultType="int">
		select count(*) from product where inputdate between sysdate-3 and sysdate
		<if test="range == 'recently'">
			order by pnum desc
		</if>
		<if test="range == 'highPrice'">
			order by price desc
		</if>
		<if test="range == 'rowPrice'">
			order by price
		</if>
	</select>
	
	<select id="getNewProductRange" resultType="product">
		select * from product where inputdate between sysdate-3 and sysdate
		<if test="range == 'recently'">
			order by pnum desc
		</if>
		<if test="range == 'highPrice'">
			order by price desc
		</if>
		<if test="range == 'rowPrice'">
			order by price
		</if>
	</select>
	
	<select id="getKeywordCount" resultType="int">
		select count(*) from product where pname like #{keyword}
		<if test="range == 'recently'">
			order by pnum desc
		</if>
		<if test="range == 'highPrice'">
			order by price desc
		</if>
		<if test="range == 'rowPrice'">
			order by price
		</if>
		<if test="range == 'best'">
			order by ordercount desc
		</if>
	</select>
	
 	<select id="getKeywordRange" resultType="product">
		select * from product where pname like #{keyword}
		<if test="range == 'recently'">
			order by pnum desc
		</if>
		<if test="range == 'highPrice'">
			order by price desc
		</if>
		<if test="range == 'rowPrice'">
			order by price
		</if>
		<if test="range == 'best'">
			order by ordercount desc
		</if>
	</select>
	
	<insert id="insertProductByOwner">
		insert into product(pnum, id, pname, pimage, price, pcontent, stock, pcategory, inputdate)
		values(seqprod.nextval, #{id}, #{pname}, #{pimage}, #{price}, #{pcontent}, #{stock}, #{pcategory}, sysdate)
	</insert>
	
	<select id="getTotalCountForOwner" resultType="int">
   		select count(*) from product where 1=1 and id=#{id}
	    <!-- dcategory에 대한 조건 추가 -->
	    <if test="whatColumn != null and whatColumn != ''">
	        AND pcategory = #{whatColumn}
	    </if>
	    
	    <!-- pname 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
	    <if test="inputPname != null and inputPname != ''">
	        AND pname LIKE #{inputPname}
	    </if>
	
	    <!-- pnum 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
	    <if test="inputPnum != null and inputPnum != ''">
	        AND pnum LIKE #{inputPnum}
	    </if>
	
	    <!-- inputdate 조건: 날짜 범위로 필터링 -->
	    <if test="inputDay1 != null and inputDay1 != ''">
	        AND inputdate &gt;= #{inputDay1}
	    </if>
	    <if test="inputDay2 != null and inputDay2 != ''">
	        AND inputdate &lt;= #{inputDay2}
	    </if>
	</select>
	
	<select id="getAllProductForOwner" resultType="product">
		select * from product
		<where>
	    	id=#{id}
		    <!-- pcategory에 대한 조건 추가 -->
		    <if test="whatColumn != null and whatColumn != ''">
		        and pcategory = #{whatColumn} 
		    </if>
		    
		    <!-- pname 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
		    <if test="inputPname != null and inputPname != ''">
		        and pname LIKE #{inputPname} 
		    </if>
		
		    <!-- pnum 조건: '%'을 사용하여 LIKE 조건으로 감싸기 -->
		    <if test="inputPnum != null and inputPnum != ''">
		        and pnum LIKE #{inputPnum} 
		    </if>
		
		    <!-- inputdate 조건: 날짜 범위로 필터링 -->
		    <if test="inputDay1 != null and inputDay1 != ''">
		        and inputdate &gt;= #{inputDay1} 
		    </if>
		    <if test="inputDay2 != null and inputDay2 != ''">
		        and inputdate &lt;= #{inputDay2} 
		    </if>
	    </where>
	    order by pnum
	</select>
	
	<select id="checkProductApproval" resultType="document.model.DocumentBean">
		select count(*) from document where writer=#{id} and dcategory='상품등록' and dstatus=1
	</select>
</mapper>